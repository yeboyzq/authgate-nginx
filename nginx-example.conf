    server {
        # 设置站点端口
        listen  443 ssl;
        # 设置站点域名
        server_name  www.xxxx.com;
        # 设置站点访问日志
        access_log  /data/logs/nginx/www_xxxx_com-access.log main;
        # 设置站点SSL证书(引用主文件变量, 不用改)
        ssl_certificate  ${sslcert_pathfile}.pem;
        ssl_certificate_key  ${sslcert_pathfile}.key;
        # 代理转发设置
        # 认证设置
        location  = /nginx/api/verify {
            internal;
            proxy_pass  http://127.0.0.1:8000;
            proxy_pass_request_body  off;
            proxy_set_header  Content-Length "";
            proxy_set_header  Cookie $http_cookie;
            proxy_set_header  X-Original-URI $request_uri;
            proxy_set_header  X-Original-Method $request_method;
        }
        location  = /nginx/login {
            proxy_pass  http://127.0.0.1:8000;
            proxy_set_header  Host $host;
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
        }
        location  ~ ^/nginx {
            proxy_pass  http://127.0.0.1:8000;
            proxy_pass_header  Set-Cookie;
            proxy_set_header  Cookie $http_cookie;
            proxy_set_header  Host $host;
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
        }

        location  / {
            # 指定认证URL
            auth_request  /nginx/api/verify;
            auth_request_set  $auth_user $upstream_http_x_auth_user;
            proxy_set_header  Cookie $http_cookie;
            proxy_set_header  X-Auth-User $auth_user;
            # 如果身份验证服务返回401则重定向到登录页面
            error_page  401 =302 /nginx/login?redirect=$request_uri;

            proxy_pass  http://127.0.0.1:8080/;
            proxy_redirect  default;
            proxy_set_header  Host $host;
            # proxy_pass后端域名与代理域名不同时使用
            #proxy_set_header  Host $proxy_host;
            proxy_set_header  Connection ${connection_upgrade};
            proxy_set_header  Upgrade $http_upgrade;
            # websocket配置
            #proxy_set_header  Upgrade "websocket";
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Host $host:$server_port;
            proxy_set_header  X-Forwarded-Server $host;
            proxy_set_header  X-Forwarded-Port $server_port;
            proxy_set_header  X-Forwarded-Proto $scheme;
        }
    }